

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jul 16 14:44:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 17/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   0013B8                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _LAT_REG
    69   0013B8  89                 	db	137
    70   0013B9  0F                 	db	15
    71   0013BA  8A                 	db	138
    72   0013BB  0F                 	db	15
    73   0013BC  8B                 	db	139
    74   0013BD  0F                 	db	15
    75   0013BE  8C                 	db	140
    76   0013BF  0F                 	db	15
    77   0013C0  8D                 	db	141
    78   0013C1  0F                 	db	15
    79                           
    80                           ;initializer for _TRIS_REG
    81   0013C2  92                 	db	146
    82   0013C3  0F                 	db	15
    83   0013C4  93                 	db	147
    84   0013C5  0F                 	db	15
    85   0013C6  94                 	db	148
    86   0013C7  0F                 	db	15
    87   0013C8  95                 	db	149
    88   0013C9  0F                 	db	15
    89   0013CA  96                 	db	150
    90   0013CB  0F                 	db	15
    91                           
    92                           ;initializer for _PORT_REG
    93   0013CC  80                 	db	128
    94   0013CD  0F                 	db	15
    95   0013CE  81                 	db	129
    96   0013CF  0F                 	db	15
    97   0013D0  82                 	db	130
    98   0013D1  0F                 	db	15
    99   0013D2  83                 	db	131
   100   0013D3  0F                 	db	15
   101   0013D4  84                 	db	132
   102   0013D5  0F                 	db	15
   103                           
   104                           ;initializer for _reverse_num
   105   0013D6  80                 	db	128
   106   0013D7  40                 	db	64
   107   0013D8  20                 	db	32
   108   0013D9  10                 	db	16
   109   0013DA  08                 	db	8
   110   0013DB  04                 	db	4
   111   0013DC  02                 	db	2
   112   0013DD  01                 	db	1
   113                           
   114                           ;initializer for _forwerd_num
   115   0013DE  01                 	db	1
   116   0013DF  02                 	db	2
   117   0013E0  04                 	db	4
   118   0013E1  08                 	db	8
   119   0013E2  10                 	db	16
   120   0013E3  20                 	db	32
   121   0013E4  40                 	db	64
   122   0013E5  80                 	db	128
   123                           
   124                           ;initializer for _RET
   125   0013E6  01                 	db	1
   126                           
   127                           ;initializer for __int0
   128   0013E7  90                 	db	low _ISR_FUNC
   129   0013E8  14                 	db	high _ISR_FUNC
   130   0013E9  00                 	db	0
   131   0013EA  01                 	db	1
   132   0013EB  01                 	db	1
   133   0013EC  00                 	db	0
   134   0013ED  01                 	db	1
   135                           
   136                           ;initializer for __portc
   137   0013EE  00                 	db	0
   138   0013EF  00                 	db	0
   139   0013F0  02                 	db	2
   140   000000                     _LATA	set	3977
   141   000000                     _TRISA	set	3986
   142   000000                     _PORTE	set	3972
   143   000000                     _PORTD	set	3971
   144   000000                     _PORTC	set	3970
   145   000000                     _PORTB	set	3969
   146   000000                     _PORTA	set	3968
   147   000000                     _INTCON2bits	set	4081
   148   000000                     _INTCONbits	set	4082
   149   000000                     _TRISE	set	3990
   150   000000                     _TRISD	set	3989
   151   000000                     _TRISC	set	3988
   152   000000                     _TRISB	set	3987
   153   000000                     _LATE	set	3981
   154   000000                     _LATD	set	3980
   155   000000                     _LATC	set	3979
   156   000000                     _LATB	set	3978
   157                           
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161   0013F2                     __pcinit:
   162                           	callstack 0
   163   0013F2                     start_initialization:
   164                           	callstack 0
   165   0013F2                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Initialize objects allocated to COMRAM (57 bytes)
   169                           ; load TBLPTR registers with __pidataCOMRAM
   170   0013F2  0EB8               	movlw	low __pidataCOMRAM
   171   0013F4  6EF6               	movwf	tblptrl,c
   172   0013F6  0E13               	movlw	high __pidataCOMRAM
   173   0013F8  6EF7               	movwf	tblptrh,c
   174   0013FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   175   0013FC  6EF8               	movwf	tblptru,c
   176   0013FE  EE00  F001         	lfsr	0,__pdataCOMRAM
   177   001402  EE10 F039          	lfsr	1,57
   178   001406                     copy_data0:
   179   001406  0009               	tblrd		*+
   180   001408  CFF5 FFEE          	movff	tablat,postinc0
   181   00140C  50E5               	movf	postdec1,w,c
   182   00140E  50E1               	movf	fsr1l,w,c
   183   001410  E1FA               	bnz	copy_data0
   184                           
   185                           ; Clear objects allocated to COMRAM (5 bytes)
   186   001412  6A4D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   187   001414  6A4C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   188   001416  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   189   001418  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   190   00141A  6A49               	clrf	__pbssCOMRAM& (0+255),c
   191   00141C                     end_of_initialization:
   192                           	callstack 0
   193   00141C                     __end_of__initialization:
   194                           	callstack 0
   195   00141C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   196   00141E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   197   001420  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198   001422  6EF8               	movwf	tblptru,c
   199   001424  0100               	movlb	0
   200   001426  EF01  F008         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203   000049                     __pbssCOMRAM:
   204                           	callstack 0
   205   000049                     _flag:
   206                           	callstack 0
   207   000049                     	ds	2
   208   00004B                     _INT0_InterruptManager:
   209                           	callstack 0
   210   00004B                     	ds	2
   211   00004D                     _counter:
   212                           	callstack 0
   213   00004D                     	ds	1
   214                           
   215                           	psect	dataCOMRAM
   216   000001                     __pdataCOMRAM:
   217                           	callstack 0
   218   000001                     _LAT_REG:
   219                           	callstack 0
   220   000001                     	ds	10
   221   00000B                     _TRIS_REG:
   222                           	callstack 0
   223   00000B                     	ds	10
   224   000015                     _PORT_REG:
   225                           	callstack 0
   226   000015                     	ds	10
   227   00001F                     _reverse_num:
   228                           	callstack 0
   229   00001F                     	ds	8
   230   000027                     _forwerd_num:
   231                           	callstack 0
   232   000027                     	ds	8
   233   00002F                     _RET:
   234                           	callstack 0
   235   00002F                     	ds	1
   236   000030                     __int0:
   237                           	callstack 0
   238   000030                     	ds	7
   239   000037                     __portc:
   240                           	callstack 0
   241   000037                     	ds	3
   242                           
   243                           	psect	cstackCOMRAM
   244   00003A                     __pcstackCOMRAM:
   245                           	callstack 0
   246   00003A                     ??_InterruptMangerHigh:
   247   00003A                     
   248                           ; 2 bytes @ 0x0
   249   00003A                     	ds	2
   250   00003C                     ??_InterruptMangerLow:
   251                           
   252                           ; 1 bytes @ 0x2
   253   00003C                     	ds	1
   254   00003D                     GPIO_PIN_Give_Direction@_pin:
   255                           	callstack 0
   256   00003D                     GPIO_PORT_Write_logic@_port:
   257                           	callstack 0
   258   00003D                     GPIO_PORT_Give_Direction@_port:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x3
   262   00003D                     	ds	1
   263   00003E                     GPIO_PIN_Give_Direction@_direction:
   264                           	callstack 0
   265   00003E                     GPIO_PORT_Write_logic@_logic:
   266                           	callstack 0
   267   00003E                     GPIO_PORT_Give_Direction@_direction:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x4
   271   00003E                     	ds	1
   272   00003F                     ??_GPIO_PIN_Give_Direction:
   273   00003F                     ??_GPIO_PORT_Give_Direction:
   274   00003F                     ??_GPIO_PORT_Write_logic:
   275                           
   276                           ; 1 bytes @ 0x5
   277   00003F                     	ds	2
   278   000041                     GPIO_PORT_Write_logic@Ret:
   279                           	callstack 0
   280   000041                     GPIO_PORT_Give_Direction@Ret:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x7
   284   000041                     	ds	1
   285   000042                     GPIO_PORT_Initialize@_port:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x8
   289   000042                     	ds	1
   290   000043                     GPIO_PORT_Initialize@Ret:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x9
   294   000043                     	ds	1
   295   000044                     GPIO_PIN_Give_Direction@Ret:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0xA
   299   000044                     	ds	1
   300   000045                     Interuupt_INT0_Initialize@_INT0:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xB
   304   000045                     	ds	1
   305   000046                     ??_Interuupt_INT0_Initialize:
   306                           
   307                           ; 1 bytes @ 0xC
   308   000046                     	ds	1
   309   000047                     ??_main:
   310                           
   311                           ; 1 bytes @ 0xD
   312   000047                     	ds	2
   313                           
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 34 in file "Lighting_Mode.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  2  370[None  ] int 
   326 ;; Registers used:
   327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels required when called: 7
   339 ;; This function calls:
   340 ;;		_GPIO_PORT_Write_logic
   341 ;;		_Initialize
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348   001002                     __ptext0:
   349                           	callstack 0
   350   001002                     _main:
   351                           	callstack 24
   352   001002                     
   353                           ;Lighting_Mode.c: 35:     Initialize();
   354   001002  EC5D  F00A         	call	_Initialize	;wreg free
   355   001006                     l1473:
   356                           
   357                           ;Lighting_Mode.c: 37:         if(flag == 0){
   358   001006  5049               	movf	_flag^0,w,c	;volatile
   359   001008  104A               	iorwf	(_flag+1)^0,w,c	;volatile
   360   00100A  A4D8               	btfss	status,2,c
   361   00100C  EF0A  F008         	goto	u611
   362   001010  EF0C  F008         	goto	u610
   363   001014                     u611:
   364   001014  EF15  F008         	goto	l1477
   365   001018                     u610:
   366   001018                     
   367                           ;Lighting_Mode.c: 38:             RET = GPIO_PORT_Write_logic(&_portc,0x00);
   368   001018  0E37               	movlw	low __portc
   369   00101A  6E3D               	movwf	GPIO_PORT_Write_logic@_port^0,c
   370   00101C  0E00               	movlw	0
   371   00101E  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   372   001020  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   373   001024  6E2F               	movwf	_RET^0,c
   374                           
   375                           ;Lighting_Mode.c: 39:         }
   376   001026  EF03  F008         	goto	l1473
   377   00102A                     l1477:
   378   00102A  0449               	decf	_flag^0,w,c	;volatile
   379   00102C  104A               	iorwf	(_flag+1)^0,w,c	;volatile
   380   00102E  A4D8               	btfss	status,2,c
   381   001030  EF1C  F008         	goto	u621
   382   001034  EF1E  F008         	goto	u620
   383   001038                     u621:
   384   001038  EF41  F008         	goto	l1493
   385   00103C                     u620:
   386   00103C                     
   387                           ;Lighting_Mode.c: 41:             for(counter = 0 ; counter < 8; counter++){
   388   00103C  0E00               	movlw	0
   389   00103E  6E4D               	movwf	_counter^0,c
   390   001040                     l1485:
   391                           
   392                           ;Lighting_Mode.c: 42:                 RET = GPIO_PORT_Write_logic(&_portc,forwerd_num[co
      +                          unter]);
   393   001040  0E37               	movlw	low __portc
   394   001042  6E3D               	movwf	GPIO_PORT_Write_logic@_port^0,c
   395   001044  504D               	movf	_counter^0,w,c
   396   001046  0F27               	addlw	low _forwerd_num
   397   001048  6ED9               	movwf	fsr2l,c
   398   00104A  6ADA               	clrf	fsr2h,c
   399   00104C  50DF               	movf	indf2,w,c
   400   00104E  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   401   001050  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   402   001054  6E2F               	movwf	_RET^0,c
   403   001056                     
   404                           ;Lighting_Mode.c: 43:                 _delay((unsigned long)((250)*(8000000UL/4000.0)));
   405   001056  0E03               	movlw	3
   406   001058  6E48               	movwf	(??_main+1)^0,c
   407   00105A  0E8A               	movlw	138
   408   00105C  6E47               	movwf	??_main^0,c
   409   00105E  0E56               	movlw	86
   410   001060                     u687:
   411   001060  2EE8               	decfsz	wreg,f,c
   412   001062  D7FE               	bra	u687
   413   001064  2E47               	decfsz	??_main^0,f,c
   414   001066  D7FC               	bra	u687
   415   001068  2E48               	decfsz	(??_main+1)^0,f,c
   416   00106A  D7FA               	bra	u687
   417   00106C                     
   418                           ;Lighting_Mode.c: 44:             }
   419   00106C  2A4D               	incf	_counter^0,f,c
   420   00106E  0E07               	movlw	7
   421   001070  644D               	cpfsgt	_counter^0,c
   422   001072  EF3D  F008         	goto	u631
   423   001076  EF3F  F008         	goto	u630
   424   00107A                     u631:
   425   00107A  EF20  F008         	goto	l1485
   426   00107E                     u630:
   427   00107E  EF03  F008         	goto	l1473
   428   001082                     l1493:
   429   001082  0E02               	movlw	2
   430   001084  1849               	xorwf	_flag^0,w,c	;volatile
   431   001086  104A               	iorwf	(_flag+1)^0,w,c	;volatile
   432   001088  A4D8               	btfss	status,2,c
   433   00108A  EF49  F008         	goto	u641
   434   00108E  EF4B  F008         	goto	u640
   435   001092                     u641:
   436   001092  EF6E  F008         	goto	l1509
   437   001096                     u640:
   438   001096                     
   439                           ;Lighting_Mode.c: 47:             for(counter = 0 ; counter < 8; counter++){
   440   001096  0E00               	movlw	0
   441   001098  6E4D               	movwf	_counter^0,c
   442   00109A                     l1501:
   443                           
   444                           ;Lighting_Mode.c: 48:                 RET = GPIO_PORT_Write_logic(&_portc,reverse_num[co
      +                          unter]);
   445   00109A  0E37               	movlw	low __portc
   446   00109C  6E3D               	movwf	GPIO_PORT_Write_logic@_port^0,c
   447   00109E  504D               	movf	_counter^0,w,c
   448   0010A0  0F1F               	addlw	low _reverse_num
   449   0010A2  6ED9               	movwf	fsr2l,c
   450   0010A4  6ADA               	clrf	fsr2h,c
   451   0010A6  50DF               	movf	indf2,w,c
   452   0010A8  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   453   0010AA  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   454   0010AE  6E2F               	movwf	_RET^0,c
   455   0010B0                     
   456                           ;Lighting_Mode.c: 49:                 _delay((unsigned long)((250)*(8000000UL/4000.0)));
   457   0010B0  0E03               	movlw	3
   458   0010B2  6E48               	movwf	(??_main+1)^0,c
   459   0010B4  0E8A               	movlw	138
   460   0010B6  6E47               	movwf	??_main^0,c
   461   0010B8  0E56               	movlw	86
   462   0010BA                     u697:
   463   0010BA  2EE8               	decfsz	wreg,f,c
   464   0010BC  D7FE               	bra	u697
   465   0010BE  2E47               	decfsz	??_main^0,f,c
   466   0010C0  D7FC               	bra	u697
   467   0010C2  2E48               	decfsz	(??_main+1)^0,f,c
   468   0010C4  D7FA               	bra	u697
   469   0010C6                     
   470                           ;Lighting_Mode.c: 50:             }
   471   0010C6  2A4D               	incf	_counter^0,f,c
   472   0010C8  0E07               	movlw	7
   473   0010CA  644D               	cpfsgt	_counter^0,c
   474   0010CC  EF6A  F008         	goto	u651
   475   0010D0  EF6C  F008         	goto	u650
   476   0010D4                     u651:
   477   0010D4  EF4D  F008         	goto	l1501
   478   0010D8                     u650:
   479   0010D8  EF03  F008         	goto	l1473
   480   0010DC                     l1509:
   481   0010DC  0E03               	movlw	3
   482   0010DE  1849               	xorwf	_flag^0,w,c	;volatile
   483   0010E0  104A               	iorwf	(_flag+1)^0,w,c	;volatile
   484   0010E2  A4D8               	btfss	status,2,c
   485   0010E4  EF76  F008         	goto	u661
   486   0010E8  EF78  F008         	goto	u660
   487   0010EC                     u661:
   488   0010EC  EF9E  F008         	goto	l1517
   489   0010F0                     u660:
   490   0010F0                     
   491                           ;Lighting_Mode.c: 53:             RET = GPIO_PORT_Write_logic(&_portc,0xAA);
   492   0010F0  0E37               	movlw	low __portc
   493   0010F2  6E3D               	movwf	GPIO_PORT_Write_logic@_port^0,c
   494   0010F4  0EAA               	movlw	170
   495   0010F6  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   496   0010F8  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   497   0010FC  6E2F               	movwf	_RET^0,c
   498   0010FE                     
   499                           ;Lighting_Mode.c: 54:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   500   0010FE  0E03               	movlw	3
   501   001100  6E48               	movwf	(??_main+1)^0,c
   502   001102  0E8A               	movlw	138
   503   001104  6E47               	movwf	??_main^0,c
   504   001106  0E56               	movlw	86
   505   001108                     u707:
   506   001108  2EE8               	decfsz	wreg,f,c
   507   00110A  D7FE               	bra	u707
   508   00110C  2E47               	decfsz	??_main^0,f,c
   509   00110E  D7FC               	bra	u707
   510   001110  2E48               	decfsz	(??_main+1)^0,f,c
   511   001112  D7FA               	bra	u707
   512   001114                     
   513                           ;Lighting_Mode.c: 55:             RET = GPIO_PORT_Write_logic(&_portc,0x55);
   514   001114  0E37               	movlw	low __portc
   515   001116  6E3D               	movwf	GPIO_PORT_Write_logic@_port^0,c
   516   001118  0E55               	movlw	85
   517   00111A  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   518   00111C  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   519   001120  6E2F               	movwf	_RET^0,c
   520                           
   521                           ;Lighting_Mode.c: 56:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   522   001122  0E03               	movlw	3
   523   001124  6E48               	movwf	(??_main+1)^0,c
   524   001126  0E8A               	movlw	138
   525   001128  6E47               	movwf	??_main^0,c
   526   00112A  0E56               	movlw	86
   527   00112C                     u717:
   528   00112C  2EE8               	decfsz	wreg,f,c
   529   00112E  D7FE               	bra	u717
   530   001130  2E47               	decfsz	??_main^0,f,c
   531   001132  D7FC               	bra	u717
   532   001134  2E48               	decfsz	(??_main+1)^0,f,c
   533   001136  D7FA               	bra	u717
   534                           
   535                           ;Lighting_Mode.c: 57:         }
   536   001138  EF03  F008         	goto	l1473
   537   00113C                     l1517:
   538   00113C  0E04               	movlw	4
   539   00113E  1849               	xorwf	_flag^0,w,c	;volatile
   540   001140  104A               	iorwf	(_flag+1)^0,w,c	;volatile
   541   001142  A4D8               	btfss	status,2,c
   542   001144  EFA6  F008         	goto	u671
   543   001148  EFA8  F008         	goto	u670
   544   00114C                     u671:
   545   00114C  EFCE  F008         	goto	l373
   546   001150                     u670:
   547   001150                     
   548                           ;Lighting_Mode.c: 59:             RET = GPIO_PORT_Write_logic(&_portc,0xFF);
   549   001150  0E37               	movlw	low __portc
   550   001152  6E3D               	movwf	GPIO_PORT_Write_logic@_port^0,c
   551   001154  0EFF               	movlw	255
   552   001156  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   553   001158  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   554   00115C  6E2F               	movwf	_RET^0,c
   555   00115E                     
   556                           ;Lighting_Mode.c: 60:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   557   00115E  0E03               	movlw	3
   558   001160  6E48               	movwf	(??_main+1)^0,c
   559   001162  0E8A               	movlw	138
   560   001164  6E47               	movwf	??_main^0,c
   561   001166  0E56               	movlw	86
   562   001168                     u727:
   563   001168  2EE8               	decfsz	wreg,f,c
   564   00116A  D7FE               	bra	u727
   565   00116C  2E47               	decfsz	??_main^0,f,c
   566   00116E  D7FC               	bra	u727
   567   001170  2E48               	decfsz	(??_main+1)^0,f,c
   568   001172  D7FA               	bra	u727
   569   001174                     
   570                           ;Lighting_Mode.c: 61:             RET = GPIO_PORT_Write_logic(&_portc,0x00);
   571   001174  0E37               	movlw	low __portc
   572   001176  6E3D               	movwf	GPIO_PORT_Write_logic@_port^0,c
   573   001178  0E00               	movlw	0
   574   00117A  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   575   00117C  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   576   001180  6E2F               	movwf	_RET^0,c
   577                           
   578                           ;Lighting_Mode.c: 62:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
   579   001182  0E03               	movlw	3
   580   001184  6E48               	movwf	(??_main+1)^0,c
   581   001186  0E8A               	movlw	138
   582   001188  6E47               	movwf	??_main^0,c
   583   00118A  0E56               	movlw	86
   584   00118C                     u737:
   585   00118C  2EE8               	decfsz	wreg,f,c
   586   00118E  D7FE               	bra	u737
   587   001190  2E47               	decfsz	??_main^0,f,c
   588   001192  D7FC               	bra	u737
   589   001194  2E48               	decfsz	(??_main+1)^0,f,c
   590   001196  D7FA               	bra	u737
   591                           
   592                           ;Lighting_Mode.c: 63:         }
   593   001198  EF03  F008         	goto	l1473
   594   00119C                     l373:
   595   00119C  EF03  F008         	goto	l1473
   596   0011A0  EF13  F000         	goto	start
   597   0011A4                     __end_of_main:
   598                           	callstack 0
   599                           
   600 ;; *************** function _Initialize *****************
   601 ;; Defined at:
   602 ;;		line 70 in file "Lighting_Mode.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 6
   623 ;; This function calls:
   624 ;;		_GPIO_PORT_Initialize
   625 ;;		_Interuupt_INT0_Initialize
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text1
   632   0014BA                     __ptext1:
   633                           	callstack 0
   634   0014BA                     _Initialize:
   635                           	callstack 24
   636   0014BA                     
   637                           ;Lighting_Mode.c: 71:     Interuupt_INT0_Initialize(&_int0);
   638   0014BA  0E30               	movlw	low __int0
   639   0014BC  6E45               	movwf	Interuupt_INT0_Initialize@_INT0^0,c
   640   0014BE  EC45  F009         	call	_Interuupt_INT0_Initialize	;wreg free
   641                           
   642                           ;Lighting_Mode.c: 72:     GPIO_PORT_Initialize(&_portc);
   643   0014C2  0E37               	movlw	low __portc
   644   0014C4  6E42               	movwf	GPIO_PORT_Initialize@_port^0,c
   645   0014C6  ECBB  F009         	call	_GPIO_PORT_Initialize	;wreg free
   646   0014CA  0012               	return		;funcret
   647   0014CC                     __end_of_Initialize:
   648                           	callstack 0
   649                           
   650 ;; *************** function _Interuupt_INT0_Initialize *****************
   651 ;; Defined at:
   652 ;;		line 20 in file "MCAL_LAYER/Interrupt/External_Interrupt.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  _INT0           1   11[COMRAM] PTR struct .
   655 ;;		 -> _int0(7), 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  RET             1    0        unsigned char 
   658 ;;  RET             1    0        unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      unsigned char 
   661 ;; Registers used:
   662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   668 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;Total ram usage:        2 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 5
   675 ;; This function calls:
   676 ;;		_GPIO_PIN_Give_Direction
   677 ;; This function is called by:
   678 ;;		_Initialize
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text2
   683   00128A                     __ptext2:
   684                           	callstack 0
   685   00128A                     _Interuupt_INT0_Initialize:
   686                           	callstack 24
   687   00128A                     
   688                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 22:     if (((void*)0) == _INT0){
   689   00128A  5045               	movf	Interuupt_INT0_Initialize@_INT0^0,w,c
   690   00128C  A4D8               	btfss	status,2,c
   691   00128E  EF4B  F009         	goto	u571
   692   001292  EF4D  F009         	goto	u570
   693   001296                     u571:
   694   001296  EF4F  F009         	goto	l1421
   695   00129A                     u570:
   696   00129A                     
   697                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 24:     }
   698   00129A  EF70  F009         	goto	l111
   699   00129E                     l1421:
   700   00129E                     
   701                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 28:         (INTCONbits.INT0E = 0);
   702   00129E  98F2               	bcf	242,4,c	;volatile
   703   0012A0                     
   704                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 30:         (INTCONbits.INT0F = 0);
   705   0012A0  92F2               	bcf	242,1,c	;volatile
   706   0012A2                     
   707                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 32:         (INTCON2bits.INTEDG0=_INT0->INTE
      +                          RRUPT_INTx_Edge);
   708   0012A2  5045               	movf	Interuupt_INT0_Initialize@_INT0^0,w,c
   709   0012A4  6ED9               	movwf	fsr2l,c
   710   0012A6  6ADA               	clrf	fsr2h,c
   711   0012A8  0E06               	movlw	6
   712   0012AA  26D9               	addwf	fsr2l,f,c
   713   0012AC  50DF               	movf	indf2,w,c
   714   0012AE  6E46               	movwf	??_Interuupt_INT0_Initialize^0,c
   715   0012B0  3A46               	swapf	??_Interuupt_INT0_Initialize^0,f,c
   716   0012B2  4646               	rlncf	??_Interuupt_INT0_Initialize^0,f,c
   717   0012B4  4646               	rlncf	??_Interuupt_INT0_Initialize^0,f,c
   718   0012B6  50F1               	movf	241,w,c	;volatile
   719   0012B8  1846               	xorwf	??_Interuupt_INT0_Initialize^0,w,c
   720   0012BA  0BBF               	andlw	-65
   721   0012BC  1846               	xorwf	??_Interuupt_INT0_Initialize^0,w,c
   722   0012BE  6EF1               	movwf	241,c	;volatile
   723   0012C0                     
   724                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 34:         INT0_InterruptManager = _INT0->I
      +                          nterruptHandler;
   725   0012C0  5045               	movf	Interuupt_INT0_Initialize@_INT0^0,w,c
   726   0012C2  6ED9               	movwf	fsr2l,c
   727   0012C4  6ADA               	clrf	fsr2h,c
   728   0012C6  CFDE F04B          	movff	postinc2,_INT0_InterruptManager
   729   0012CA  CFDD F04C          	movff	postdec2,_INT0_InterruptManager+1
   730   0012CE  5045               	movf	Interuupt_INT0_Initialize@_INT0^0,w,c
   731   0012D0  0F02               	addlw	2
   732   0012D2  6E3D               	movwf	GPIO_PIN_Give_Direction@_pin^0,c
   733   0012D4  0E01               	movlw	1
   734   0012D6  6E3E               	movwf	GPIO_PIN_Give_Direction@_direction^0,c
   735   0012D8  ECD2  F008         	call	_GPIO_PIN_Give_Direction	;wreg free
   736   0012DC                     
   737                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 37:         (INTCONbits.GIE =1);
   738   0012DC  8EF2               	bsf	242,7,c	;volatile
   739   0012DE                     
   740                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 38:         (INTCONbits.INT0E = 1);
   741   0012DE  88F2               	bsf	242,4,c	;volatile
   742   0012E0                     l111:
   743   0012E0  0012               	return		;funcret
   744   0012E2                     __end_of_Interuupt_INT0_Initialize:
   745                           	callstack 0
   746                           
   747 ;; *************** function _GPIO_PIN_Give_Direction *****************
   748 ;; Defined at:
   749 ;;		line 63 in file "MCAL_LAYER/GPIO_hal.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  _pin            1    3[COMRAM] PTR struct .
   752 ;;		 -> _int0(7), 
   753 ;;  _direction      1    4[COMRAM] enum E2814
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  Ret             1   10[COMRAM] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      unsigned char 
   758 ;; Registers used:
   759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;Total ram usage:        8 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 4
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_Interuupt_INT0_Initialize
   776 ;;		_GPIO_PIN_Initialize
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781   0011A4                     __ptext3:
   782                           	callstack 0
   783   0011A4                     _GPIO_PIN_Give_Direction:
   784                           	callstack 24
   785   0011A4                     
   786                           ;MCAL_LAYER/GPIO_hal.c: 64:     unsigned char Ret = 0x01 ;
   787   0011A4  0E01               	movlw	1
   788   0011A6  6E44               	movwf	GPIO_PIN_Give_Direction@Ret^0,c
   789                           
   790                           ;MCAL_LAYER/GPIO_hal.c: 65:     if(((void*)0) == _pin){
   791   0011A8  503D               	movf	GPIO_PIN_Give_Direction@_pin^0,w,c
   792   0011AA  A4D8               	btfss	status,2,c
   793   0011AC  EFDA  F008         	goto	u501
   794   0011B0  EFDC  F008         	goto	u500
   795   0011B4                     u501:
   796   0011B4  EFE0  F008         	goto	l1385
   797   0011B8                     u500:
   798   0011B8                     
   799                           ;MCAL_LAYER/GPIO_hal.c: 66:         Ret = 0x00 ;
   800   0011B8  0E00               	movlw	0
   801   0011BA  6E44               	movwf	GPIO_PIN_Give_Direction@Ret^0,c
   802                           
   803                           ;MCAL_LAYER/GPIO_hal.c: 67:     }
   804   0011BC  EF43  F009         	goto	l1393
   805   0011C0                     l1385:
   806                           
   807                           ;MCAL_LAYER/GPIO_hal.c: 69:         if(GPIO_PIN_INPUT == _direction){
   808   0011C0  043E               	decf	GPIO_PIN_Give_Direction@_direction^0,w,c
   809   0011C2  A4D8               	btfss	status,2,c
   810   0011C4  EFE6  F008         	goto	u511
   811   0011C8  EFE8  F008         	goto	u510
   812   0011CC                     u511:
   813   0011CC  EF10  F009         	goto	l1389
   814   0011D0                     u510:
   815   0011D0                     
   816                           ;MCAL_LAYER/GPIO_hal.c: 70:             (*TRIS_REG[_pin->pin_port] |=(1<<_pin->pin_num))
      +                          ;
   817   0011D0  503D               	movf	GPIO_PIN_Give_Direction@_pin^0,w,c
   818   0011D2  6ED9               	movwf	fsr2l,c
   819   0011D4  6ADA               	clrf	fsr2h,c
   820   0011D6  0E03               	movlw	3
   821   0011D8  26D9               	addwf	fsr2l,f,c
   822   0011DA  50DF               	movf	indf2,w,c
   823   0011DC  6E3F               	movwf	??_GPIO_PIN_Give_Direction^0,c
   824   0011DE  0E01               	movlw	1
   825   0011E0  6E40               	movwf	(??_GPIO_PIN_Give_Direction+1)^0,c
   826   0011E2  2A3F               	incf	??_GPIO_PIN_Give_Direction^0,f,c
   827   0011E4  EFF6  F008         	goto	u524
   828   0011E8                     u525:
   829   0011E8  90D8               	bcf	status,0,c
   830   0011EA  3640               	rlcf	(??_GPIO_PIN_Give_Direction+1)^0,f,c
   831   0011EC                     u524:
   832   0011EC  2E3F               	decfsz	??_GPIO_PIN_Give_Direction^0,f,c
   833   0011EE  EFF4  F008         	goto	u525
   834   0011F2  503D               	movf	GPIO_PIN_Give_Direction@_pin^0,w,c
   835   0011F4  6ED9               	movwf	fsr2l,c
   836   0011F6  6ADA               	clrf	fsr2h,c
   837   0011F8  0E02               	movlw	2
   838   0011FA  26D9               	addwf	fsr2l,f,c
   839   0011FC  50DF               	movf	indf2,w,c
   840   0011FE  0D02               	mullw	2
   841   001200  50F3               	movf	243,w,c
   842   001202  0F0B               	addlw	low _TRIS_REG
   843   001204  6ED9               	movwf	fsr2l,c
   844   001206  6ADA               	clrf	fsr2h,c
   845   001208  CFDE F041          	movff	postinc2,??_GPIO_PIN_Give_Direction+2
   846   00120C  CFDD F042          	movff	postdec2,??_GPIO_PIN_Give_Direction+3
   847   001210  C041  FFD9         	movff	??_GPIO_PIN_Give_Direction+2,fsr2l
   848   001214  C042  FFDA         	movff	??_GPIO_PIN_Give_Direction+3,fsr2h
   849   001218  5040               	movf	(??_GPIO_PIN_Give_Direction+1)^0,w,c
   850   00121A  12DF               	iorwf	indf2,f,c
   851                           
   852                           ;MCAL_LAYER/GPIO_hal.c: 71:         }
   853   00121C  EF43  F009         	goto	l1393
   854   001220                     l1389:
   855   001220  503E               	movf	GPIO_PIN_Give_Direction@_direction^0,w,c
   856   001222  A4D8               	btfss	status,2,c
   857   001224  EF16  F009         	goto	u531
   858   001228  EF18  F009         	goto	u530
   859   00122C                     u531:
   860   00122C  EF43  F009         	goto	l248
   861   001230                     u530:
   862   001230                     
   863                           ;MCAL_LAYER/GPIO_hal.c: 73:             (*TRIS_REG[_pin->pin_port] &=(~(1<<_pin->pin_num
      +                          )));
   864   001230  503D               	movf	GPIO_PIN_Give_Direction@_pin^0,w,c
   865   001232  6ED9               	movwf	fsr2l,c
   866   001234  6ADA               	clrf	fsr2h,c
   867   001236  0E03               	movlw	3
   868   001238  26D9               	addwf	fsr2l,f,c
   869   00123A  50DF               	movf	indf2,w,c
   870   00123C  6E3F               	movwf	??_GPIO_PIN_Give_Direction^0,c
   871   00123E  0E01               	movlw	1
   872   001240  6E40               	movwf	(??_GPIO_PIN_Give_Direction+1)^0,c
   873   001242  2A3F               	incf	??_GPIO_PIN_Give_Direction^0,f,c
   874   001244  EF26  F009         	goto	u544
   875   001248                     u545:
   876   001248  90D8               	bcf	status,0,c
   877   00124A  3640               	rlcf	(??_GPIO_PIN_Give_Direction+1)^0,f,c
   878   00124C                     u544:
   879   00124C  2E3F               	decfsz	??_GPIO_PIN_Give_Direction^0,f,c
   880   00124E  EF24  F009         	goto	u545
   881   001252  5040               	movf	(??_GPIO_PIN_Give_Direction+1)^0,w,c
   882   001254  0AFF               	xorlw	255
   883   001256  6E41               	movwf	(??_GPIO_PIN_Give_Direction+2)^0,c
   884   001258  503D               	movf	GPIO_PIN_Give_Direction@_pin^0,w,c
   885   00125A  6ED9               	movwf	fsr2l,c
   886   00125C  6ADA               	clrf	fsr2h,c
   887   00125E  0E02               	movlw	2
   888   001260  26D9               	addwf	fsr2l,f,c
   889   001262  50DF               	movf	indf2,w,c
   890   001264  0D02               	mullw	2
   891   001266  50F3               	movf	243,w,c
   892   001268  0F0B               	addlw	low _TRIS_REG
   893   00126A  6ED9               	movwf	fsr2l,c
   894   00126C  6ADA               	clrf	fsr2h,c
   895   00126E  CFDE F042          	movff	postinc2,??_GPIO_PIN_Give_Direction+3
   896   001272  CFDD F043          	movff	postdec2,??_GPIO_PIN_Give_Direction+4
   897   001276  C042  FFD9         	movff	??_GPIO_PIN_Give_Direction+3,fsr2l
   898   00127A  C043  FFDA         	movff	??_GPIO_PIN_Give_Direction+4,fsr2h
   899   00127E  5041               	movf	(??_GPIO_PIN_Give_Direction+2)^0,w,c
   900   001280  16DF               	andwf	indf2,f,c
   901                           
   902                           ;MCAL_LAYER/GPIO_hal.c: 74:         }
   903   001282  EF43  F009         	goto	l1393
   904   001286                     l248:
   905   001286                     l1393:
   906                           
   907                           ;MCAL_LAYER/GPIO_hal.c: 77:     return Ret ;
   908   001286  5044               	movf	GPIO_PIN_Give_Direction@Ret^0,w,c
   909   001288  0012               	return		;funcret
   910   00128A                     __end_of_GPIO_PIN_Give_Direction:
   911                           	callstack 0
   912                           
   913 ;; *************** function _GPIO_PORT_Initialize *****************
   914 ;; Defined at:
   915 ;;		line 105 in file "MCAL_LAYER/GPIO_hal.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  _port           1    8[COMRAM] PTR struct .
   918 ;;		 -> _portc(3), 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  Ret             1    9[COMRAM] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      unsigned char 
   923 ;; Registers used:
   924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:        2 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; Hardware stack levels required when called: 5
   937 ;; This function calls:
   938 ;;		_GPIO_PORT_Give_Direction
   939 ;;		_GPIO_PORT_Write_logic
   940 ;; This function is called by:
   941 ;;		_Initialize
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text4
   946   001376                     __ptext4:
   947                           	callstack 0
   948   001376                     _GPIO_PORT_Initialize:
   949                           	callstack 24
   950   001376                     
   951                           ;MCAL_LAYER/GPIO_hal.c: 107:     if(((void*)0) == _port){
   952   001376  5042               	movf	GPIO_PORT_Initialize@_port^0,w,c
   953   001378  A4D8               	btfss	status,2,c
   954   00137A  EFC1  F009         	goto	u581
   955   00137E  EFC3  F009         	goto	u580
   956   001382                     u581:
   957   001382  EFC5  F009         	goto	l1443
   958   001386                     u580:
   959   001386                     
   960                           ;MCAL_LAYER/GPIO_hal.c: 109:     }
   961   001386  EFDB  F009         	goto	l268
   962   00138A                     l1443:
   963                           
   964                           ;MCAL_LAYER/GPIO_hal.c: 112:         Ret = GPIO_PORT_Give_Direction(_port,_port->port_di
      +                          rection);
   965   00138A  C042  F03D         	movff	GPIO_PORT_Initialize@_port,GPIO_PORT_Give_Direction@_port
   966   00138E  5042               	movf	GPIO_PORT_Initialize@_port^0,w,c
   967   001390  6ED9               	movwf	fsr2l,c
   968   001392  6ADA               	clrf	fsr2h,c
   969   001394  0E01               	movlw	1
   970   001396  26D9               	addwf	fsr2l,f,c
   971   001398  50DF               	movf	indf2,w,c
   972   00139A  6E3E               	movwf	GPIO_PORT_Give_Direction@_direction^0,c
   973   00139C  EC96  F009         	call	_GPIO_PORT_Give_Direction	;wreg free
   974   0013A0  6E43               	movwf	GPIO_PORT_Initialize@Ret^0,c
   975                           
   976                           ;MCAL_LAYER/GPIO_hal.c: 114:         Ret = GPIO_PORT_Write_logic(_port,_port->port_logic
      +                          );
   977   0013A2  C042  F03D         	movff	GPIO_PORT_Initialize@_port,GPIO_PORT_Write_logic@_port
   978   0013A6  5042               	movf	GPIO_PORT_Initialize@_port^0,w,c
   979   0013A8  6ED9               	movwf	fsr2l,c
   980   0013AA  6ADA               	clrf	fsr2h,c
   981   0013AC  50DF               	movf	indf2,w,c
   982   0013AE  6E3E               	movwf	GPIO_PORT_Write_logic@_logic^0,c
   983   0013B0  EC71  F009         	call	_GPIO_PORT_Write_logic	;wreg free
   984   0013B4  6E43               	movwf	GPIO_PORT_Initialize@Ret^0,c
   985   0013B6                     l268:
   986   0013B6  0012               	return		;funcret
   987   0013B8                     __end_of_GPIO_PORT_Initialize:
   988                           	callstack 0
   989                           
   990 ;; *************** function _GPIO_PORT_Write_logic *****************
   991 ;; Defined at:
   992 ;;		line 119 in file "MCAL_LAYER/GPIO_hal.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  _port           1    3[COMRAM] PTR struct .
   995 ;;		 -> _portc(3), 
   996 ;;  _logic          1    4[COMRAM] unsigned char 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  Ret             1    7[COMRAM] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      unsigned char 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        5 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 4
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_GPIO_PORT_Initialize
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text5
  1024   0012E2                     __ptext5:
  1025                           	callstack 0
  1026   0012E2                     _GPIO_PORT_Write_logic:
  1027                           	callstack 24
  1028   0012E2                     
  1029                           ;MCAL_LAYER/GPIO_hal.c: 120:     unsigned char Ret = 0x01 ;
  1030   0012E2  0E01               	movlw	1
  1031   0012E4  6E41               	movwf	GPIO_PORT_Write_logic@Ret^0,c
  1032                           
  1033                           ;MCAL_LAYER/GPIO_hal.c: 122:     if(((void*)0) == _port){
  1034   0012E6  503D               	movf	GPIO_PORT_Write_logic@_port^0,w,c
  1035   0012E8  A4D8               	btfss	status,2,c
  1036   0012EA  EF79  F009         	goto	u561
  1037   0012EE  EF7B  F009         	goto	u560
  1038   0012F2                     u561:
  1039   0012F2  EF7F  F009         	goto	l1411
  1040   0012F6                     u560:
  1041   0012F6                     
  1042                           ;MCAL_LAYER/GPIO_hal.c: 123:         Ret = 0x00 ;
  1043   0012F6  0E00               	movlw	0
  1044   0012F8  6E41               	movwf	GPIO_PORT_Write_logic@Ret^0,c
  1045                           
  1046                           ;MCAL_LAYER/GPIO_hal.c: 124:     }
  1047   0012FA  EF94  F009         	goto	l1413
  1048   0012FE                     l1411:
  1049                           
  1050                           ;MCAL_LAYER/GPIO_hal.c: 126:         *LAT_REG[_port->port_num] = _logic ;
  1051   0012FE  503D               	movf	GPIO_PORT_Write_logic@_port^0,w,c
  1052   001300  6ED9               	movwf	fsr2l,c
  1053   001302  6ADA               	clrf	fsr2h,c
  1054   001304  0E02               	movlw	2
  1055   001306  26D9               	addwf	fsr2l,f,c
  1056   001308  50DF               	movf	indf2,w,c
  1057   00130A  0D02               	mullw	2
  1058   00130C  50F3               	movf	243,w,c
  1059   00130E  0F01               	addlw	low _LAT_REG
  1060   001310  6ED9               	movwf	fsr2l,c
  1061   001312  6ADA               	clrf	fsr2h,c
  1062   001314  CFDE F03F          	movff	postinc2,??_GPIO_PORT_Write_logic
  1063   001318  CFDD F040          	movff	postdec2,??_GPIO_PORT_Write_logic+1
  1064   00131C  C03F  FFD9         	movff	??_GPIO_PORT_Write_logic,fsr2l
  1065   001320  C040  FFDA         	movff	??_GPIO_PORT_Write_logic+1,fsr2h
  1066   001324  C03E  FFDF         	movff	GPIO_PORT_Write_logic@_logic,indf2
  1067   001328                     l1413:
  1068                           
  1069                           ;MCAL_LAYER/GPIO_hal.c: 128:     return Ret ;
  1070   001328  5041               	movf	GPIO_PORT_Write_logic@Ret^0,w,c
  1071   00132A  0012               	return		;funcret
  1072   00132C                     __end_of_GPIO_PORT_Write_logic:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _GPIO_PORT_Give_Direction *****************
  1076 ;; Defined at:
  1077 ;;		line 155 in file "MCAL_LAYER/GPIO_hal.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  _port           1    3[COMRAM] PTR struct .
  1080 ;;		 -> _portc(3), 
  1081 ;;  _direction      1    4[COMRAM] unsigned char 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  Ret             1    7[COMRAM] unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      unsigned char 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:        5 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 4
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_GPIO_PORT_Initialize
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text6
  1108   00132C                     __ptext6:
  1109                           	callstack 0
  1110   00132C                     _GPIO_PORT_Give_Direction:
  1111                           	callstack 24
  1112   00132C                     
  1113                           ;MCAL_LAYER/GPIO_hal.c: 156:     unsigned char Ret = 0x01 ;
  1114   00132C  0E01               	movlw	1
  1115   00132E  6E41               	movwf	GPIO_PORT_Give_Direction@Ret^0,c
  1116                           
  1117                           ;MCAL_LAYER/GPIO_hal.c: 157:     if(((void*)0) == _port){
  1118   001330  503D               	movf	GPIO_PORT_Give_Direction@_port^0,w,c
  1119   001332  A4D8               	btfss	status,2,c
  1120   001334  EF9E  F009         	goto	u551
  1121   001338  EFA0  F009         	goto	u550
  1122   00133C                     u551:
  1123   00133C  EFA4  F009         	goto	l1401
  1124   001340                     u550:
  1125   001340                     
  1126                           ;MCAL_LAYER/GPIO_hal.c: 158:         Ret = 0x00 ;
  1127   001340  0E00               	movlw	0
  1128   001342  6E41               	movwf	GPIO_PORT_Give_Direction@Ret^0,c
  1129                           
  1130                           ;MCAL_LAYER/GPIO_hal.c: 159:     }
  1131   001344  EFB9  F009         	goto	l1403
  1132   001348                     l1401:
  1133                           
  1134                           ;MCAL_LAYER/GPIO_hal.c: 161:         *TRIS_REG[_port->port_num] = _direction ;
  1135   001348  503D               	movf	GPIO_PORT_Give_Direction@_port^0,w,c
  1136   00134A  6ED9               	movwf	fsr2l,c
  1137   00134C  6ADA               	clrf	fsr2h,c
  1138   00134E  0E02               	movlw	2
  1139   001350  26D9               	addwf	fsr2l,f,c
  1140   001352  50DF               	movf	indf2,w,c
  1141   001354  0D02               	mullw	2
  1142   001356  50F3               	movf	243,w,c
  1143   001358  0F0B               	addlw	low _TRIS_REG
  1144   00135A  6ED9               	movwf	fsr2l,c
  1145   00135C  6ADA               	clrf	fsr2h,c
  1146   00135E  CFDE F03F          	movff	postinc2,??_GPIO_PORT_Give_Direction
  1147   001362  CFDD F040          	movff	postdec2,??_GPIO_PORT_Give_Direction+1
  1148   001366  C03F  FFD9         	movff	??_GPIO_PORT_Give_Direction,fsr2l
  1149   00136A  C040  FFDA         	movff	??_GPIO_PORT_Give_Direction+1,fsr2h
  1150   00136E  C03E  FFDF         	movff	GPIO_PORT_Give_Direction@_direction,indf2
  1151   001372                     l1403:
  1152                           
  1153                           ;MCAL_LAYER/GPIO_hal.c: 163:     return Ret ;
  1154   001372  5041               	movf	GPIO_PORT_Give_Direction@Ret^0,w,c
  1155   001374  0012               	return		;funcret
  1156   001376                     __end_of_GPIO_PORT_Give_Direction:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _InterruptMangerLow *****************
  1160 ;; Defined at:
  1161 ;;		line 15 in file "MCAL_LAYER/Interrupt/Interrupt_Manager.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		None
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        1 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 3
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		Interrupt level 1
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	intcodelo
  1190   000018                     __pintcodelo:
  1191                           	callstack 0
  1192   000018                     _InterruptMangerLow:
  1193                           	callstack 24
  1194                           
  1195                           ;incstack = 0
  1196   000018  804E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1197   00001A  CFE0 F03C          	movff	bsr,??_InterruptMangerLow
  1198   00001E  C03C  FFE0         	movff	??_InterruptMangerLow,bsr
  1199   000022  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1200   000024  0010               	retfie	
  1201   000026                     __end_of_InterruptMangerLow:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _InterruptMangerHigh *****************
  1205 ;; Defined at:
  1206 ;;		line 10 in file "MCAL_LAYER/Interrupt/Interrupt_Manager.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        2 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 2
  1227 ;; This function calls:
  1228 ;;		_INT0_ISR
  1229 ;; This function is called by:
  1230 ;;		Interrupt level 2
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	intcode
  1235   000008                     __pintcode:
  1236                           	callstack 0
  1237   000008                     _InterruptMangerHigh:
  1238                           	callstack 24
  1239                           
  1240                           ;incstack = 0
  1241   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1242   00000A  ED15  F00A         	call	int_func,f	;refresh shadow registers
  1243                           
  1244                           	psect	intcode_body
  1245   00142A                     __pintcode_body:
  1246                           	callstack 24
  1247   00142A                     int_func:
  1248                           	callstack 24
  1249   00142A  0006               	pop		; remove dummy address from shadow register refresh
  1250   00142C  CFFA F03A          	movff	pclath,??_InterruptMangerHigh
  1251   001430  CFFB F03B          	movff	pclatu,??_InterruptMangerHigh+1
  1252   001434                     
  1253                           ;MCAL_LAYER/Interrupt/Interrupt_Manager.c: 11:    if(1 == INTCONbits.INT0F && 1 == INTCO
      +                          Nbits.INT0E){
  1254   001434  A2F2               	btfss	242,1,c	;volatile
  1255   001436  EF1F  F00A         	goto	i2u26_41
  1256   00143A  EF21  F00A         	goto	i2u26_40
  1257   00143E                     i2u26_41:
  1258   00143E  EF2A  F00A         	goto	i2l167
  1259   001442                     i2u26_40:
  1260   001442  A8F2               	btfss	242,4,c	;volatile
  1261   001444  EF26  F00A         	goto	i2u27_41
  1262   001448  EF28  F00A         	goto	i2u27_40
  1263   00144C                     i2u27_41:
  1264   00144C  EF2A  F00A         	goto	i2l167
  1265   001450                     i2u27_40:
  1266   001450                     
  1267                           ;MCAL_LAYER/Interrupt/Interrupt_Manager.c: 12:         INT0_ISR();
  1268   001450  EC30  F00A         	call	_INT0_ISR	;wreg free
  1269   001454                     i2l167:
  1270   001454  C03B  FFFB         	movff	??_InterruptMangerHigh+1,pclatu
  1271   001458  C03A  FFFA         	movff	??_InterruptMangerHigh,pclath
  1272   00145C  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1273   00145E  0011               	retfie		f
  1274   001460                     __end_of_InterruptMangerHigh:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _INT0_ISR *****************
  1278 ;; Defined at:
  1279 ;;		line 57 in file "MCAL_LAYER/Interrupt/External_Interrupt.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; Hardware stack levels required when called: 1
  1300 ;; This function calls:
  1301 ;;		NULL
  1302 ;;		_ISR_FUNC
  1303 ;; This function is called by:
  1304 ;;		_InterruptMangerHigh
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text9
  1309   001460                     __ptext9:
  1310                           	callstack 0
  1311   001460                     _INT0_ISR:
  1312                           	callstack 24
  1313   001460                     
  1314                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 59:     (INTCONbits.INT0F = 0);
  1315   001460  92F2               	bcf	242,1,c	;volatile
  1316   001462                     
  1317                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 60:     if(INT0_InterruptManager){
  1318   001462  504B               	movf	_INT0_InterruptManager^0,w,c
  1319   001464  104C               	iorwf	(_INT0_InterruptManager+1)^0,w,c
  1320   001466  B4D8               	btfsc	status,2,c
  1321   001468  EF38  F00A         	goto	i2u11_41
  1322   00146C  EF3A  F00A         	goto	i2u11_40
  1323   001470                     i2u11_41:
  1324   001470  EF47  F00A         	goto	i2l120
  1325   001474                     i2u11_40:
  1326   001474                     
  1327                           ;MCAL_LAYER/Interrupt/External_Interrupt.c: 61:         INT0_InterruptManager();
  1328   001474  D802               	call	i2u12_48
  1329   001476  EF47  F00A         	goto	i2u12_49
  1330   00147A                     i2u12_48:
  1331   00147A  0005               	push	
  1332   00147C  6EFA               	movwf	pclath,c
  1333   00147E  504B               	movf	_INT0_InterruptManager^0,w,c
  1334   001480  6EFD               	movwf	tosl,c
  1335   001482  504C               	movf	(_INT0_InterruptManager+1)^0,w,c
  1336   001484  6EFE               	movwf	tosh,c
  1337   001486  50F8               	movf	tblptru,w,c
  1338   001488  6EFF               	movwf	tosu,c
  1339   00148A  50FA               	movf	pclath,w,c
  1340   00148C  0012               	return		;indir
  1341   00148E                     i2u12_49:
  1342   00148E                     i2l120:
  1343   00148E  0012               	return		;funcret
  1344   001490                     __end_of_INT0_ISR:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _ISR_FUNC *****************
  1348 ;; Defined at:
  1349 ;;		line 75 in file "Lighting_Mode.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;Total ram usage:        0 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_INT0_ISR
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text10
  1377   001490                     __ptext10:
  1378                           	callstack 0
  1379   001490                     _ISR_FUNC:
  1380                           	callstack 24
  1381   001490                     
  1382                           ;Lighting_Mode.c: 76:     flag++;
  1383   001490  4A49               	infsnz	_flag^0,f,c	;volatile
  1384   001492  2A4A               	incf	(_flag+1)^0,f,c	;volatile
  1385   001494                     
  1386                           ;Lighting_Mode.c: 77:     if(flag>4){
  1387   001494  BE4A               	btfsc	(_flag+1)^0,7,c	;volatile
  1388   001496  EF56  F00A         	goto	i2u10_41
  1389   00149A  504A               	movf	(_flag+1)^0,w,c	;volatile
  1390   00149C  E109               	bnz	i2u10_40
  1391   00149E  0E05               	movlw	5
  1392   0014A0  5C49               	subwf	_flag^0,w,c	;volatile
  1393   0014A2  A0D8               	btfss	status,0,c
  1394   0014A4  EF56  F00A         	goto	i2u10_41
  1395   0014A8  EF58  F00A         	goto	i2u10_40
  1396   0014AC                     i2u10_41:
  1397   0014AC  EF5C  F00A         	goto	i2l395
  1398   0014B0                     i2u10_40:
  1399   0014B0                     
  1400                           ;Lighting_Mode.c: 78:         flag = 0;
  1401   0014B0  0E00               	movlw	0
  1402   0014B2  6E4A               	movwf	(_flag+1)^0,c	;volatile
  1403   0014B4  0E00               	movlw	0
  1404   0014B6  6E49               	movwf	_flag^0,c	;volatile
  1405   0014B8                     i2l395:
  1406   0014B8  0012               	return		;funcret
  1407   0014BA                     __end_of_ISR_FUNC:
  1408                           	callstack 0
  1409                           
  1410                           	psect	smallconst
  1411   001000                     __psmallconst:
  1412                           	callstack 0
  1413   001000  00                 	db	0
  1414   001001  00                 	db	0	; dummy byte at the end
  1415   000000                     
  1416                           	psect	text11
  1417   000000                     __ptext11:
  1418                           	callstack 0
  1419   000000                     
  1420                           	psect	rparam
  1421   000000                     
  1422                           	psect	temp
  1423   00004E                     btemp:
  1424                           	callstack 0
  1425   00004E                     	ds	1
  1426   000000                     int$flags	set	btemp
  1427   000000                     wtemp8	set	btemp+1
  1428   000000                     ttemp5	set	btemp+1
  1429   000000                     ttemp6	set	btemp+4
  1430   000000                     ttemp7	set	btemp+8
  1431                           
  1432                           	psect	config
  1433                           
  1434                           ; Padding undefined space
  1435   300000                     	org	3145728
  1436   300000  FF                 	db	255
  1437                           
  1438                           ;Config register CONFIG1H @ 0x300001
  1439                           ;	Oscillator Selection bits
  1440                           ;	OSC = HS, HS oscillator
  1441                           ;	Fail-Safe Clock Monitor Enable bit
  1442                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1443                           ;	Internal/External Oscillator Switchover bit
  1444                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1445   300001                     	org	3145729
  1446   300001  02                 	db	2
  1447                           
  1448                           ;Config register CONFIG2L @ 0x300002
  1449                           ;	Power-up Timer Enable bit
  1450                           ;	PWRT = OFF, PWRT disabled
  1451                           ;	Brown-out Reset Enable bits
  1452                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1453                           ;	Brown Out Reset Voltage bits
  1454                           ;	BORV = 1, 
  1455   300002                     	org	3145730
  1456   300002  09                 	db	9
  1457                           
  1458                           ;Config register CONFIG2H @ 0x300003
  1459                           ;	Watchdog Timer Enable bit
  1460                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1461                           ;	Watchdog Timer Postscale Select bits
  1462                           ;	WDTPS = 32768, 1:32768
  1463   300003                     	org	3145731
  1464   300003  1E                 	db	30
  1465                           
  1466                           ; Padding undefined space
  1467   300004                     	org	3145732
  1468   300004  FF                 	db	255
  1469                           
  1470                           ;Config register CONFIG3H @ 0x300005
  1471                           ;	CCP2 MUX bit
  1472                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1473                           ;	PORTB A/D Enable bit
  1474                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1475                           ;	Low-Power Timer1 Oscillator Enable bit
  1476                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1477                           ;	MCLR Pin Enable bit
  1478                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1479   300005                     	org	3145733
  1480   300005  81                 	db	129
  1481                           
  1482                           ;Config register CONFIG4L @ 0x300006
  1483                           ;	Stack Full/Underflow Reset Enable bit
  1484                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1485                           ;	Single-Supply ICSP Enable bit
  1486                           ;	LVP = OFF, Single-Supply ICSP disabled
  1487                           ;	Extended Instruction Set Enable bit
  1488                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1489                           ;	Background Debugger Enable bit
  1490                           ;	DEBUG = 0x1, unprogrammed default
  1491   300006                     	org	3145734
  1492   300006  81                 	db	129
  1493                           
  1494                           ; Padding undefined space
  1495   300007                     	org	3145735
  1496   300007  FF                 	db	255
  1497                           
  1498                           ;Config register CONFIG5L @ 0x300008
  1499                           ;	Code Protection bit
  1500                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1501                           ;	Code Protection bit
  1502                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1503                           ;	Code Protection bit
  1504                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1505                           ;	Code Protection bit
  1506                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1507   300008                     	org	3145736
  1508   300008  0F                 	db	15
  1509                           
  1510                           ;Config register CONFIG5H @ 0x300009
  1511                           ;	Boot Block Code Protection bit
  1512                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1513                           ;	Data EEPROM Code Protection bit
  1514                           ;	CPD = OFF, Data EEPROM not code-protected
  1515   300009                     	org	3145737
  1516   300009  C0                 	db	192
  1517                           
  1518                           ;Config register CONFIG6L @ 0x30000A
  1519                           ;	Write Protection bit
  1520                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1521                           ;	Write Protection bit
  1522                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1523                           ;	Write Protection bit
  1524                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1525                           ;	Write Protection bit
  1526                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1527   30000A                     	org	3145738
  1528   30000A  0F                 	db	15
  1529                           
  1530                           ;Config register CONFIG6H @ 0x30000B
  1531                           ;	Configuration Register Write Protection bit
  1532                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1533                           ;	Boot Block Write Protection bit
  1534                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1535                           ;	Data EEPROM Write Protection bit
  1536                           ;	WRTD = OFF, Data EEPROM not write-protected
  1537   30000B                     	org	3145739
  1538   30000B  E0                 	db	224
  1539                           
  1540                           ;Config register CONFIG7L @ 0x30000C
  1541                           ;	Table Read Protection bit
  1542                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1543                           ;	Table Read Protection bit
  1544                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1545                           ;	Table Read Protection bit
  1546                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1547                           ;	Table Read Protection bit
  1548                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1549   30000C                     	org	3145740
  1550   30000C  0F                 	db	15
  1551                           
  1552                           ;Config register CONFIG7H @ 0x30000D
  1553                           ;	Boot Block Table Read Protection bit
  1554                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1555   30000D                     	org	3145741
  1556   30000D  40                 	db	64
  1557                           tosu	equ	0xFFF
  1558                           tosh	equ	0xFFE
  1559                           tosl	equ	0xFFD
  1560                           stkptr	equ	0xFFC
  1561                           pclatu	equ	0xFFB
  1562                           pclath	equ	0xFFA
  1563                           pcl	equ	0xFF9
  1564                           tblptru	equ	0xFF8
  1565                           tblptrh	equ	0xFF7
  1566                           tblptrl	equ	0xFF6
  1567                           tablat	equ	0xFF5
  1568                           prodh	equ	0xFF4
  1569                           prodl	equ	0xFF3
  1570                           indf0	equ	0xFEF
  1571                           postinc0	equ	0xFEE
  1572                           postdec0	equ	0xFED
  1573                           preinc0	equ	0xFEC
  1574                           plusw0	equ	0xFEB
  1575                           fsr0h	equ	0xFEA
  1576                           fsr0l	equ	0xFE9
  1577                           wreg	equ	0xFE8
  1578                           indf1	equ	0xFE7
  1579                           postinc1	equ	0xFE6
  1580                           postdec1	equ	0xFE5
  1581                           preinc1	equ	0xFE4
  1582                           plusw1	equ	0xFE3
  1583                           fsr1h	equ	0xFE2
  1584                           fsr1l	equ	0xFE1
  1585                           bsr	equ	0xFE0
  1586                           indf2	equ	0xFDF
  1587                           postinc2	equ	0xFDE
  1588                           postdec2	equ	0xFDD
  1589                           preinc2	equ	0xFDC
  1590                           plusw2	equ	0xFDB
  1591                           fsr2h	equ	0xFDA
  1592                           fsr2l	equ	0xFD9
  1593                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        57
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15      77
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    GPIO_PIN_Give_Direction@_pin	PTR struct . size(1) Largest target is 7
		 -> _int0(COMRAM[7]), 

    GPIO_PORT_Give_Direction@_port	PTR struct . size(1) Largest target is 3
		 -> _portc(COMRAM[3]), 

    GPIO_PORT_Initialize@_port	PTR struct . size(1) Largest target is 3
		 -> _portc(COMRAM[3]), 

    GPIO_PORT_Write_logic@_port	PTR struct . size(1) Largest target is 3
		 -> _portc(COMRAM[3]), 

    _int0$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_FUNC(), 

    INT0_InterruptManager	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_FUNC(), NULL(), 

    Interuupt_INT0_Initialize@_INT0	PTR struct . size(1) Largest target is 7
		 -> _int0(COMRAM[7]), 

    Interuupt_INT0_Initialize@_INT0$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_FUNC(), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S165$InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_FUNC(), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhl[1]), TRISC(BITBIGSFRhl[1]), TRISD(BITBIGSFRhl[1]), 
		 -> TRISE(BITBIGSFRhl[1]), 


Critical Paths under _main in COMRAM

    _Initialize->_Interuupt_INT0_Initialize
    _Interuupt_INT0_Initialize->_GPIO_PIN_Give_Direction
    _GPIO_PORT_Initialize->_GPIO_PORT_Give_Direction
    _GPIO_PORT_Initialize->_GPIO_PORT_Write_logic

Critical Paths under _InterruptMangerLow in COMRAM

    None.

Critical Paths under _InterruptMangerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptMangerLow in BANK0

    None.

Critical Paths under _InterruptMangerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptMangerLow in BANK1

    None.

Critical Paths under _InterruptMangerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptMangerLow in BANK2

    None.

Critical Paths under _InterruptMangerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptMangerLow in BANK3

    None.

Critical Paths under _InterruptMangerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptMangerLow in BANK4

    None.

Critical Paths under _InterruptMangerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptMangerLow in BANK5

    None.

Critical Paths under _InterruptMangerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptMangerLow in BANK6

    None.

Critical Paths under _InterruptMangerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptMangerLow in BANK7

    None.

Critical Paths under _InterruptMangerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptMangerLow in BANK8

    None.

Critical Paths under _InterruptMangerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptMangerLow in BANK9

    None.

Critical Paths under _InterruptMangerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptMangerLow in BANK10

    None.

Critical Paths under _InterruptMangerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptMangerLow in BANK11

    None.

Critical Paths under _InterruptMangerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptMangerLow in BANK12

    None.

Critical Paths under _InterruptMangerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptMangerLow in BANK13

    None.

Critical Paths under _InterruptMangerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptMangerLow in BANK14

    None.

Critical Paths under _InterruptMangerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptMangerLow in BANK15

    None.

Critical Paths under _InterruptMangerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3706
                                             13 COMRAM     2     2      0
              _GPIO_PORT_Write_logic
                         _Initialize
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0    2400
               _GPIO_PORT_Initialize
          _Interuupt_INT0_Initialize
 ---------------------------------------------------------------------------------
 (2) _Interuupt_INT0_Initialize                            4     3      1     656
                                             11 COMRAM     2     1      1
            _GPIO_PIN_Give_Direction
 ---------------------------------------------------------------------------------
 (3) _GPIO_PIN_Give_Direction                              8     6      2     482
                                              3 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _GPIO_PORT_Initialize                                 2     1      1    1744
                                              8 COMRAM     2     1      1
           _GPIO_PORT_Give_Direction
              _GPIO_PORT_Write_logic
 ---------------------------------------------------------------------------------
 (3) _GPIO_PORT_Write_logic                                5     3      2    1306
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _GPIO_PORT_Give_Direction                             5     3      2     242
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptMangerLow                                   1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptMangerHigh                                  2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
                                NULL *
                           _ISR_FUNC *
 ---------------------------------------------------------------------------------
 (7) _ISR_FUNC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_PORT_Write_logic
   _Initialize
     _GPIO_PORT_Initialize
       _GPIO_PORT_Give_Direction
       _GPIO_PORT_Write_logic
     _Interuupt_INT0_Initialize
       _GPIO_PIN_Give_Direction

 _InterruptMangerLow (ROOT)

 _InterruptMangerHigh (ROOT)
   _INT0_ISR
     NULL(Fake) *
     _ISR_FUNC *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      4D       1       61.1%
BITBIGSFRhl         5A      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      26        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jul 16 14:44:39 2024

              ??_InterruptMangerLow 003C      Interuupt_INT0_Initialize@_INT0 0045  
                                bsr 0FE0               ??_InterruptMangerHigh 003A  
                               l111 12E0                                 l251 1288  
                               l248 1286                                 l273 132A  
                               l292 1374                                 l268 13B6  
                               l373 119C                                 l391 14CA  
                               u500 11B8                                 u501 11B4  
                               u510 11D0                                 u511 11CC  
                               u530 1230                                 u610 1018  
                               u531 122C                                 u611 1014  
                               u524 11EC                                 u620 103C  
                               u525 11E8                                 u621 1038  
                               u550 1340                                 u630 107E  
                               u551 133C                                 u631 107A  
                               u560 12F6                                 u544 124C  
                               u640 1096                                 u561 12F2  
                               u545 1248                                 u641 1092  
                               u570 129A                                 u650 10D8  
                               u571 1296                                 u707 1108  
                               u651 10D4                                 u580 1386  
                               u660 10F0                                 u581 1382  
                               u717 112C                                 u661 10EC  
                               u670 1150                                 _RET 002F  
                               u727 1168                                 u671 114C  
                               u737 118C                                 u687 1060  
                               u697 10BA                                 tosl 0FFD  
                               wreg 0FE8                                l1401 1348  
                              l1403 1372                                l1411 12FE  
                              l1413 1328                                l1421 129E  
                              l1501 109A                                l1407 12E2  
                              l1431 12CE                                l1423 129E  
                              l1511 10F0                                l1503 10B0  
                              l1409 12F6                                l1441 1386  
                              l1433 12DC                                l1425 12A0  
                              l1417 128A                                l1521 115E  
                              l1513 10FE                                l1505 10C6  
                              l1443 138A                                l1435 12DE  
                              l1427 12A2                                l1419 129A  
                              l1523 1174                                l1515 1114  
                              l1507 10C8                                l1381 11A4  
                              l1429 12C0                                l1517 113C  
                              l1509 10DC                                l1439 1376  
                              l1391 1230                                l1383 11B8  
                              l1447 14BA                                l1519 1150  
                              l1471 1002                                l1393 1286  
                              l1385 11C0                                l1473 1006  
                              l1387 11D0                                l1491 106E  
                              l1475 1018                                l1397 132C  
                              l1389 1220                                l1485 1040  
                              l1493 1082                                l1477 102A  
                              l1399 1340                                l1495 1096  
                              l1487 1056                                l1479 103C  
                              l1489 106C                                _LATA 0F89  
                              _LATB 0F8A                                _LATC 0F8B  
                              _LATD 0F8C                                _LATE 0F8D  
                              _flag 0049                                _main 1002  
                              fsr2h 0FDA                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              btemp 004E             _GPIO_PIN_Give_Direction 11A4  
                              prodl 0FF3              ??_GPIO_PORT_Initialize 0043  
                              start 0026                        ___param_bank 0000  
                  __end_of_INT0_ISR 1490                               ?_main 003A  
                             i1l172 001E                               i2l120 148E  
                             i2l167 1454                               i2l395 14B8  
                             _PORTA 0F80                               _PORTB 0F81  
                             _PORTC 0F82                               _PORTD 0F83  
                             _PORTE 0F84                    __end_of_ISR_FUNC 14BA  
                             _TRISA 0F92                               _TRISB 0F93  
                             _TRISC 0F94                               _TRISD 0F95  
                             _TRISE 0F96    __end_of_GPIO_PORT_Give_Direction 1376  
                             __int0 0030         ??_Interuupt_INT0_Initialize 0046  
                             pclath 0FFA                               pclatu 0FFB  
                             tablat 0FF5                               ttemp5 004F  
                             ttemp6 0052                               ttemp7 0056  
                             status 0FD8                               wtemp8 004F  
            ?_GPIO_PORT_Write_logic 003D            GPIO_PORT_Write_logic@Ret 0041  
                   __initialization 13F2   GPIO_PIN_Give_Direction@_direction 003E  
                      __end_of_main 11A4                          _Initialize 14BA  
                            ??_main 0047                       __activetblptr 0002  
                            i2l1141 14B0                              i2l1143 1460  
                            i2l1137 1490                              i2l1145 1462  
                            i2l1241 1434                              i2l1139 1494  
                            i2l1147 1474                              i2l1243 1442  
                            i2l1245 1450           ??_GPIO_PIN_Give_Direction 003F  
       GPIO_PIN_Give_Direction@_pin 003D           _Interuupt_INT0_Initialize 128A  
                            __portc 0037                              isa$std 0001  
                      __pdataCOMRAM 0001                        __mediumconst 0000  
                            tblptrh 0FF7                              tblptrl 0FF6  
                            tblptru 0FF8            _GPIO_PORT_Give_Direction 132C  
                        __accesstop 0080             __end_of__initialization 141C  
                         ?_INT0_ISR 003A                       ___rparam_used 0001  
                         ?_ISR_FUNC 003A                      __pcstackCOMRAM 003A  
                       ?_Initialize 003A         GPIO_PORT_Give_Direction@Ret 0041  
                        ??_INT0_ISR 003A               _INT0_InterruptManager 004B  
                        ??_ISR_FUNC 003A         __end_of_InterruptMangerHigh 1460  
         GPIO_PORT_Initialize@_port 0042                             _LAT_REG 0001  
                           i2u10_40 14B0                             i2u10_41 14AC  
                           i2u11_40 1474                             i2u11_41 1470  
                           i2u12_48 147A                             i2u12_49 148E  
                           i2u26_40 1442                             i2u26_41 143E  
                           i2u27_40 1450                             i2u27_41 144C  
GPIO_PORT_Give_Direction@_direction 003E             ??_GPIO_PORT_Write_logic 003F  
                           __Hparam 0000                             __Lparam 0000  
       GPIO_PORT_Write_logic@_logic 003E                        __psmallconst 1000  
                           __pcinit 13F2                             __ramtop 1000  
                           __ptext0 1002                             __ptext1 14BA  
                           __ptext2 128A                             __ptext3 11A4  
                           __ptext4 1376                             __ptext5 12E2  
                           __ptext6 132C                             __ptext9 1460  
                           _counter 004D             GPIO_PORT_Initialize@Ret 0043  
                    __pintcode_body 142A                end_of_initialization 141C  
     GPIO_PORT_Give_Direction@_port 003D                       __Lmediumconst 0000  
                           int_func 142A                             postdec1 0FE5  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc2 0FDE          ??_GPIO_PORT_Give_Direction 003F  
                      ??_Initialize 0047                       __pidataCOMRAM 13B8  
               start_initialization 13F2            ?_GPIO_PIN_Give_Direction 003D  
                __end_of_Initialize 14CC          GPIO_PIN_Give_Direction@Ret 0044  
                       __pbssCOMRAM 0049       __end_of_GPIO_PORT_Write_logic 132C  
        __end_of_InterruptMangerLow 0026                           __pintcode 0008  
                       __pintcodelo 0018     __end_of_GPIO_PIN_Give_Direction 128A  
                       __smallconst 1000        __end_of_GPIO_PORT_Initialize 13B8  
        GPIO_PORT_Write_logic@_port 003D                            _INT0_ISR 1460  
                          _ISR_FUNC 1490                            _PORT_REG 0015  
                          _TRIS_REG 000B                         _INTCON2bits 0FF1  
                         copy_data0 1406                            __Hrparam 0000  
                          __Lrparam 0000                            __ptext10 1490  
                          __ptext11 0000                         _forwerd_num 0027  
        ?_Interuupt_INT0_Initialize 0045           ?_GPIO_PORT_Give_Direction 003D  
              _GPIO_PORT_Initialize 1376                            isa$xinst 0000  
                          int$flags 004E                         fp__ISR_FUNC 0000  
                        _INTCONbits 0FF2   __end_of_Interuupt_INT0_Initialize 12E2  
                          intlevel1 0000                            intlevel2 0000  
               _InterruptMangerHigh 0008               ?_GPIO_PORT_Initialize 0042  
                       _reverse_num 001F                ?_InterruptMangerHigh 003A  
                _InterruptMangerLow 0018                 ?_InterruptMangerLow 003A  
             _GPIO_PORT_Write_logic 12E2  
